/**
* This chip multiplies 2 numbers represented by 16 bit busses. a number longer
* than 16 bits will be reduced to its 16 least significant bits.
*/

CHIP Mul{
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    //each "iteration" we either add a line of zeroes or the number but shifted.
    Mux16(a=false, b=a, sel=b[0], out=addend0);
    ShiftLeft(in=a, out=shifted0);
    Mux16(a=false, b=shifted0, sel=b[1], out=addend1);
    ShiftLeft(in=shifted0, out=shifted1);
    Mux16(a=false, b=shifted1, sel=b[2], out=addend2);
    ShiftLeft(in=shifted1, out=shifted2);
    Mux16(a=false, b=shifted2, sel=b[3], out=addend3);
    ShiftLeft(in=shifted2, out=shifted3);
    Mux16(a=false, b=shifted3, sel=b[4], out=addend4);
    ShiftLeft(in=shifted3, out=shifted4);
    Mux16(a=false, b=shifted4, sel=b[5], out=addend5);
    ShiftLeft(in=shifted4, out=shifted5);
    Mux16(a=false, b=shifted5, sel=b[6], out=addend6);
    ShiftLeft(in=shifted5, out=shifted6);
    Mux16(a=false, b=shifted6, sel=b[7], out=addend7);
    ShiftLeft(in=shifted6, out=shifted7);
    Mux16(a=false, b=shifted7, sel=b[8], out=addend8);
    ShiftLeft(in=shifted7, out=shifted8);
    Mux16(a=false, b=shifted8, sel=b[9], out=addend9);
    ShiftLeft(in=shifted8, out=shifted9);
    Mux16(a=false, b=shifted9, sel=b[10], out=addend10);
    ShiftLeft(in=shifted9, out=shifted10);
    Mux16(a=false, b=shifted10, sel=b[11], out=addend11);
    ShiftLeft(in=shifted10, out=shifted11);
    Mux16(a=false, b=shifted11, sel=b[12], out=addend12);
    ShiftLeft(in=shifted11, out=shifted12);
    Mux16(a=false, b=shifted12, sel=b[13], out=addend13);
    ShiftLeft(in=shifted12, out=shifted13);
    Mux16(a=false, b=shifted13, sel=b[14], out=addend14);
    ShiftLeft(in=shifted13, out=shifted14);
    Mux16(a=false, b=shifted14, sel=b[15], out=addend15);


    //now add all possible addends:
    Add16(a=addend0, b=addend1, out=temp1);
    Add16(a=temp1, b=addend2, out=temp2);
    Add16(a=temp2, b=addend3, out=temp3);
    Add16(a=temp3, b=addend4, out=temp4);
    Add16(a=temp4, b=addend5, out=temp5);
    Add16(a=temp5, b=addend6, out=temp6);
    Add16(a=temp6, b=addend7, out=temp7);
    Add16(a=temp7, b=addend8, out=temp8);
    Add16(a=temp8, b=addend9, out=temp9);
    Add16(a=temp9, b=addend10, out=temp10);
    Add16(a=temp10, b=addend11, out=temp11);
    Add16(a=temp11, b=addend12, out=temp12);
    Add16(a=temp12, b=addend13, out=temp13);
    Add16(a=temp13, b=addend14, out=temp14);
    Add16(a=temp14, b=addend15, out=out); //final addend, output of chip.

}
